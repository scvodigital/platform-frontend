<script type="text/javascript">
var tabs = new mdc.tabs.MDCTabBar(document.querySelector("#vacancy-tab-bar"));
var panels = document.querySelector(".panels");
tabs.preventDefaultOnClick = true;
function updatePanel(index) {
  var activePanel = panels.querySelector(".panel.panel--active");
  if (activePanel) {
    activePanel.classList.remove("panel--active");
  }
  var newActivePanel = panels.querySelector(
    ".panel:nth-child(" + (index + 1) + ")"
  );
  if (newActivePanel) {
    newActivePanel.classList.add("panel--active");
  }
}
tabs.listen("MDCTabBar:change", function(t) {
  var tabs = t.detail;
  var nthChildIndex = tabs.activeTabIndex;
  updatePanel(nthChildIndex);
  if (goodmoves.maps.vacancyMap) {
    window.setTimeout(function() {
      goodmoves.maps.vacancyMap.eachLayer(function(layer) {
        if (layer.redraw) {
          layer.redraw();
        }
      });
    }, 500);
  }
});

{{#if data.auth}}
$('button[data-user-notes]').on('click', function(evt) {
  var id = $(evt.currentTarget).data('user-notes');
  var userNotes = $('textarea[data-user-notes="' + id + '"]').val();
  var path = '/notes/{{@root.data.auth.uid}}/' + id;
  console.log('About to save to path:', path, ', the following notes:\n', userNotes);
  goodmoves.app.database().ref(path).update(userNotes).then(function(result) {
    console.log('Saved notes:', result);
  }).catch(function(err) {
    console.error('Failed to save notes:', err);
  });  
});
{{/if}}
</script>
